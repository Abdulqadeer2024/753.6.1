pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven'
                sh 'mvn clean package' // Maven build command
            }
            post {
                always {
                    echo 'Build stage completed'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit tests using JUnit'
                sh 'mvn test' // Running unit tests
                echo 'Running integration tests using Selenium'
                sh 'mvn verify -P integration-tests' // Running integration tests
            }
            post {
                always {
                    echo 'Unit and Integration Tests stage completed'
                }
                success {
                    emailext (
                        subject: "Unit and Integration Tests Succeeded",
                        body: "The unit and integration tests stage has completed successfully.",
                        attachLog: true,
                        to: "v1e192727@gmail.com"
                    )
                }
                failure {
                    emailext (
                        subject: "Unit and Integration Tests Failed",
                        body: "The unit and integration tests stage has failed. Please check the attached logs for more details.",
                        attachLog: true,
                        to: "v1e192727@gmail.com"
                    )
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Analyzing code using SonarQube'
                sh 'mvn sonar:sonar' // SonarQube analysis command
            }
            post {
                always {
                    echo 'Code Analysis stage completed'
                }
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP ZAP'
                sh 'zap-cli start && zap-cli quick-scan http://yourapp.com' // OWASP ZAP scan command
            }
            post {
                always {
                    echo 'Security Scan stage completed'
                }
                success {
                    emailext (
                        subject: "Security Scan Succeeded",
                        body: "The security scan stage has completed successfully.",
                        attachLog: true,
                        to: "v1e192727@gmail.com"
                    )
                }
                failure {
                    emailext (
                        subject: "Security Scan Failed",
                        body: "The security scan stage has failed. Please check the attached logs for more details.",
                        attachLog: true,
                        to: "v1e192727@gmail.com"
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying the application to staging server'
                sh 'scp target/yourapp.war user@staging-server:/path/to/deploy' // Deployment command for staging
            }
            post {
                always {
                    echo 'Deploy to Staging stage completed'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on the staging environment'
                sh 'mvn verify -P staging-integration-tests' // Integration tests for staging
            }
            post {
                always {
                    echo 'Integration Tests on Staging stage completed'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to production server'
                sh 'scp target/yourapp.war user@production-server:/path/to/deploy' // Deployment command for production
            }
            post {
                always {
                    echo 'Deploy to Production stage completed'
                }
            }
        }
    }
}
